@model IEnumerable<ToDoApp.Models.TaskModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
<script type="text/javascript">
    function DisplayImage(imageBytesBase64) {

        console.log(imageBytesBase64);

        var imageBytes = Uint8Array.from(btoa(imageBytesBase64), c => c.charCodeAt(0))
        console.log(imageBytes);

        var file = new Blob([imageBytes], { type: 'image/jpg' });
        var fileURL = URL.createObjectURL(file);

        window.open(fileURL);
    }

</script>
<p>
    <a asp-action="Create">Create New</a>
</p>

<style>
    .divNode {
        max-width: 200px;
        min-width: 200px;
        display: inline-block;
        text-align: center;
        border-radius: 10px;
        margin: 8px;
        padding: 10px;
    }

    .completed {
        background-color: #65B762;
    }

    .incompleted {
        background-color: #D35152;
    }

    .titleText {
        font-size: 16px;
        font-weight: bold;
        text-align: center;
    }

    .contentText {
        font-size: 12px;
        overflow-wrap: break-word;
        overflow: hidden;
        text-align: center;
    }

    .defaultText {
        font-size: 10px;
        font-weight: bold;
        text-align: center;
    }

    .aasbutton {
        font: bold 12px Arial;
        text-decoration: none;
        background-color: #FFFFFF;
        color: #222222;
        padding: 2px 6px 2px 6px;
        border: 1px solid #404040;
        border-radius: 5px;
    }
</style>

<h2>Completed Tasks</h2>

@foreach (var item in Model)
{
    if (item.Completed == true)
    {
        <div class="divNode completed">
            <center>
                <span class="titleText"> @Html.DisplayFor(modelItem => item.Subject)</span>
            </center>
            <center>
                <span class="contentText"> @Html.DisplayFor(modelItem => item.Content)</span>
            </center>
            <center>
                <span class="defaultText"> @Html.DisplayFor(modelItem => item.Location)</span>
                <span class="defaultText"> @Html.DisplayFor(modelItem => item.Task_Date) </span>
            </center>
            <center>
                <a class="aasbutton" asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                <a class="aasbutton" asp-action="Details" asp-route-id="@item.ID">Details</a> |
                <a class="aasbutton" asp-action="Delete" asp-route-id="@item.ID">Delete</a>
            </center>
        </div>
    }
}

<h2>Incompleted Tasks</h2>

@foreach (var item in Model)
{
    if (item.Completed == false)
    {
        <div class="divNode incompleted">
            <center>
                <span class="titleText"> @Html.DisplayFor(modelItem => item.Subject)</span>
            </center>
            <center>
                <span class="contentText"> @Html.DisplayFor(modelItem => item.Content)</span>
            </center>
            <center>
                <span class="defaultText"> @Html.DisplayFor(modelItem => item.Location)</span>
                <span class="defaultText"> @Html.DisplayFor(modelItem => item.Task_Date) </span>
            </center>
            <center>
                <a class="aasbutton" asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                <a class="aasbutton" asp-action="Details" asp-route-id="@item.ID">Details</a> |
                <a class="aasbutton" asp-action="Delete" asp-route-id="@item.ID">Delete</a>
            </center>
        </div>
    }
}